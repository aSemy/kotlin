@kotlin.Metadata
public final class A$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field a$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile volatile @kotlin.jvm.Volatile field a: int
    static method <clinit>(): void
    public method <init>(): void
    public final static @org.jetbrains.annotations.NotNull method getA$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getA(): int
}

@kotlin.Metadata
public final class ANode {
    // source: 'TopLevelTest.kt'
    private final field b: java.lang.Object
    public method <init>(p0: java.lang.Object): void
    public final method component1(): java.lang.Object
    public synthetic static method copy$default(p0: ANode, p1: java.lang.Object, p2: int, p3: java.lang.Object): ANode
    public final @org.jetbrains.annotations.NotNull method copy(p0: java.lang.Object): ANode
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getB(): java.lang.Object
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class AbcNode$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field abcNode$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile volatile @kotlin.jvm.Volatile @org.jetbrains.annotations.Nullable field abcNode: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final static @org.jetbrains.annotations.NotNull method getAbcNode$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public final @org.jetbrains.annotations.Nullable method getAbcNode(): java.lang.Object
}

@kotlin.Metadata
public final class Any$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field any$FU: java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    private volatile volatile @kotlin.jvm.Volatile @org.jetbrains.annotations.Nullable field any: java.lang.Object
    static method <clinit>(): void
    public method <init>(): void
    public final static @org.jetbrains.annotations.NotNull method getAny$FU(): java.util.concurrent.atomic.AtomicReferenceFieldUpdater
    public final @org.jetbrains.annotations.Nullable method getAny(): java.lang.Object
}

@kotlin.Metadata
public final class AnyRefArr$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private @org.jetbrains.annotations.NotNull field anyRefArr: java.util.concurrent.atomic.AtomicReferenceArray
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getAnyRefArr(): java.util.concurrent.atomic.AtomicReferenceArray
}

@kotlin.Metadata
public final class B$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field b$FU: java.util.concurrent.atomic.AtomicLongFieldUpdater
    private volatile volatile @kotlin.jvm.Volatile field b: long
    static method <clinit>(): void
    public method <init>(): void
    public final static @org.jetbrains.annotations.NotNull method getB$FU(): java.util.concurrent.atomic.AtomicLongFieldUpdater
    public final method getB(): long
}

@kotlin.Metadata
public final class BNode {
    // source: 'TopLevelTest.kt'
    private final field c: java.lang.Object
    public method <init>(p0: java.lang.Object): void
    public final method component1(): java.lang.Object
    public synthetic static method copy$default(p0: BNode, p1: java.lang.Object, p2: int, p3: java.lang.Object): BNode
    public final @org.jetbrains.annotations.NotNull method copy(p0: java.lang.Object): BNode
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getC(): java.lang.Object
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class BooleanArr$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private @org.jetbrains.annotations.NotNull field booleanArr: java.util.concurrent.atomic.AtomicIntegerArray
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getBooleanArr(): java.util.concurrent.atomic.AtomicIntegerArray
}

@kotlin.Metadata
public final class C$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private final static @org.jetbrains.annotations.NotNull field c$FU: java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    private volatile volatile @kotlin.jvm.Volatile field c: int
    static method <clinit>(): void
    public method <init>(): void
    public final static @org.jetbrains.annotations.NotNull method getC$FU(): java.util.concurrent.atomic.AtomicIntegerFieldUpdater
    public final method getC(): int
}

@kotlin.Metadata
public final class CNode {
    // source: 'TopLevelTest.kt'
    private final field d: int
    public method <init>(p0: int): void
    public final method component1(): int
    public synthetic static method copy$default(p0: CNode, p1: int, p2: int, p3: java.lang.Object): CNode
    public final @org.jetbrains.annotations.NotNull method copy(p0: int): CNode
    public method equals(@org.jetbrains.annotations.Nullable p0: java.lang.Object): boolean
    public final method getD(): int
    public method hashCode(): int
    public @org.jetbrains.annotations.NotNull method toString(): java.lang.String
}

@kotlin.Metadata
public final class IntArr$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private @org.jetbrains.annotations.NotNull field intArr: java.util.concurrent.atomic.AtomicIntegerArray
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getIntArr(): java.util.concurrent.atomic.AtomicIntegerArray
}

@kotlin.Metadata
public final class LongArr$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private @org.jetbrains.annotations.NotNull field longArr: java.util.concurrent.atomic.AtomicLongArray
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getLongArr(): java.util.concurrent.atomic.AtomicLongArray
}

@kotlin.Metadata
public final class RefArr$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private @org.jetbrains.annotations.NotNull field refArr: java.util.concurrent.atomic.AtomicReferenceArray
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getRefArr(): java.util.concurrent.atomic.AtomicReferenceArray
}

@kotlin.Metadata
public final class StringAtomicNullArr$TopLevelTest$VolatileWrapper {
    // source: 'TopLevelTest.kt'
    private @org.jetbrains.annotations.NotNull field stringAtomicNullArr: java.util.concurrent.atomic.AtomicReferenceArray
    public method <init>(): void
    public final @org.jetbrains.annotations.NotNull method getStringAtomicNullArr(): java.util.concurrent.atomic.AtomicReferenceArray
}

@kotlin.Metadata
public final class TopLevelArrayTest {
    // source: 'TopLevelTest.kt'
    public method <init>(): void
    public final method testBooleanArray(): void
    public final method testIntArray(): void
    public final method testLongArray(): void
    public final method testRefArray(): void
}

@kotlin.Metadata
public final class TopLevelPrimitiveTest {
    // source: 'TopLevelTest.kt'
    public method <init>(): void
    public final method testTopLevelArrayOfNulls(): void
    public final method testTopLevelBoolean(): void
    public final method testTopLevelInt(): void
    public final method testTopLevelLong(): void
    public final method testTopLevelRef(): void
}

@kotlin.Metadata
public final class TopLevelTestKt {
    // source: 'TopLevelTest.kt'
    public final static @org.jetbrains.annotations.NotNull field a$TopLevelTest$VolatileWrapper: A$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field abcNode$TopLevelTest$VolatileWrapper: AbcNode$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field any$TopLevelTest$VolatileWrapper: Any$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field anyRefArr$TopLevelTest$VolatileWrapper: AnyRefArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field b$TopLevelTest$VolatileWrapper: B$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field booleanArr$TopLevelTest$VolatileWrapper: BooleanArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field c$TopLevelTest$VolatileWrapper: C$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field intArr$TopLevelTest$VolatileWrapper: IntArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field longArr$TopLevelTest$VolatileWrapper: LongArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field refArr$TopLevelTest$VolatileWrapper: RefArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull field stringAtomicNullArr$TopLevelTest$VolatileWrapper: StringAtomicNullArr$TopLevelTest$VolatileWrapper
    static method <clinit>(): void
    public final static @org.jetbrains.annotations.NotNull method box(): java.lang.String
    public final static @org.jetbrains.annotations.NotNull method getA$TopLevelTest$VolatileWrapper(): A$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getAbcNode$TopLevelTest$VolatileWrapper(): AbcNode$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getAny$TopLevelTest$VolatileWrapper(): Any$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getAnyRefArr$TopLevelTest$VolatileWrapper(): AnyRefArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getB$TopLevelTest$VolatileWrapper(): B$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getBooleanArr$TopLevelTest$VolatileWrapper(): BooleanArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getC$TopLevelTest$VolatileWrapper(): C$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getIntArr$TopLevelTest$VolatileWrapper(): IntArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getLongArr$TopLevelTest$VolatileWrapper(): LongArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getRefArr$TopLevelTest$VolatileWrapper(): RefArr$TopLevelTest$VolatileWrapper
    public final static @org.jetbrains.annotations.NotNull method getStringAtomicNullArr$TopLevelTest$VolatileWrapper(): StringAtomicNullArr$TopLevelTest$VolatileWrapper
}
